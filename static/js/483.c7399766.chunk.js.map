{"version":3,"file":"static/js/483.c7399766.chunk.js","mappings":"uPAEaA,EAAgB,WAEzB,OAAO,gBAAIC,MAAO,CAACC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,UAA1E,WACH,SAACC,EAAA,EAAD,CAAkBC,SAAS,SAACC,EAAA,EAAD,CAAUC,gBAAc,OACnD,iCACA,mCACA,mCACA,4BACI,SAACC,EAAA,EAAD,oBACJ,SAACA,EAAA,EAAD,0BAGP,ECZYC,EAAY,WACvB,OACE,eAAIT,MAAO,CAAC,EAAZ,UAEI,SAACD,EAAD,KAIP,E,UCRYW,EAAe,WAC1B,OACE,kBAAMV,MAAO,CAAEW,QAAS,OAAQC,gBAAiB,SAAjD,WACE,SAACC,EAAA,EAAD,KACA,SAACA,EAAA,EAAD,MAGL,E,kBCLMC,EAAcC,EAAAA,EAAAA,IAAH,6FAKXC,EAAUD,EAAAA,EAAAA,IAAH,uOAiDd,EApCc,SAAC,GAAoC,IAAlCE,EAAiC,EAAjCA,SAAUC,EAAuB,EAAvBA,kBAsBzB,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,SAAAC,GACH,WAAfA,EAAMC,MACRJ,GAEH,EAGD,OAFAK,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CACF,GAAE,CAACF,KAEO,SAACF,EAAD,CAASU,QApBU,SAAAC,GACpBA,EAAEC,gBAAkBD,EAAEE,QACtBX,GAEP,EAgBQ,UACP,SAACJ,EAAD,UACGG,KAKR,E,UC5CKa,EAAWC,SAASC,cAAc,eAuBxC,EArBa,WACX,OAAsCC,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAEQjB,EAAoB,WACtBiB,GAAe,SAAAC,GAAS,OAAKA,CAAL,GAC3B,EAEH,OACE,iCACE,iBAAKpC,MAAO,CAAEqC,UAAW,UAAzB,WACE,kCACA,SAAC7B,EAAA,EAAD,CAAQ8B,QAAQ,YAAYZ,QAASR,EAArC,yBAGA,SAACT,EAAD,OAEGyB,IAAeK,EAAAA,EAAAA,eAAa,SAAC,EAAD,CAAOrB,kBAAoBA,EAA3B,UAA8C,SAACR,EAAD,MAAyBoB,KAG7G,C","sources":["components/WordsListItem/WordsListItem.jsx","components/WordsList/WordsList.jsx","components/AddWordsForm/AddWordsForm.jsx","components/Modal/Modal.jsx","pages/Home.jsx"],"sourcesContent":["import { Button, FormControlLabel, Checkbox } from \"@mui/material\"\n\nexport const WordsListItem = () => {\n    \n    return <li style={{display: 'flex', justifyContent: 'space-between', alignItems: 'center'}}>\n        <FormControlLabel control={<Checkbox defaultChecked />} />\n        <span>1</span>\n        <span>Ukr</span>\n        <span>Eng</span>\n        <div>\n            <Button>Edit</Button>\n        <Button>Delete</Button></div>\n        \n    </li>\n}","import { WordsListItem } from '../WordsListItem/WordsListItem';\n\nexport const WordsList = () => {\n  return (\n    <ul style={{}}>\n      \n        <WordsListItem />\n      \n    </ul>\n  );\n};\n","import { TextField } from '@mui/material';\n\nexport const AddWordsForm = () => {\n  return (\n    <form style={{ padding: '24px', backgroundColor: 'white' }}>\n      <TextField />\n      <TextField />\n    </form>\n  );\n};\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\n const ModalWindow = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\n const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nconst Modal = ({ children, handleToggleModal}) => {\n\n    const closeOnClickOverlay = e => {\n        if (e.currentTarget === e.target) {\n            handleToggleModal()\n        }\n    }\n\n  \n  useEffect(() => {\n    const onCloseByEscape = event => {\n      if (event.code === 'Escape') {\n        handleToggleModal();\n      }\n    };\n    window.addEventListener('keydown', onCloseByEscape);\n\n    return () => {\n      window.removeEventListener('keydown', onCloseByEscape);\n    };\n  }, [handleToggleModal]);\n\n  return     <Overlay onClick={closeOnClickOverlay}>\n      <ModalWindow>\n        {children}\n      </ModalWindow>\n    </Overlay>\n    \n  \n};\n\nModal.propTypes = {\n  handleToggleModal: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired\n}\n\nexport default Modal;","import { useState } from 'react';\nimport { Button } from '@mui/material';\nimport { WordsList } from 'components/WordsList/WordsList';\nimport { AddWordsForm } from 'components/AddWordsForm/AddWordsForm';\nimport Modal from 'components/Modal/Modal';\nimport { createPortal } from 'react-dom';\n\nconst modalRef = document.querySelector('#modal-root');\n\nconst Home = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n    const handleToggleModal = () => {\n        setIsModalOpen(prevState => !prevState)\n    }\n\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <h1>home</h1>\n        <Button variant=\"contained\" onClick={handleToggleModal}>\n          Addnewword\n        </Button>\n        <WordsList />\n      </div>\n          {isModalOpen && createPortal(<Modal handleToggleModal={ handleToggleModal}><AddWordsForm/></Modal>, modalRef)  }\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["WordsListItem","style","display","justifyContent","alignItems","FormControlLabel","control","Checkbox","defaultChecked","Button","WordsList","AddWordsForm","padding","backgroundColor","TextField","ModalWindow","styled","Overlay","children","handleToggleModal","useEffect","onCloseByEscape","event","code","window","addEventListener","removeEventListener","onClick","e","currentTarget","target","modalRef","document","querySelector","useState","isModalOpen","setIsModalOpen","prevState","textAlign","variant","createPortal"],"sourceRoot":""}